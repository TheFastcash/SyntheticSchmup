* IDE :
    QtCreator :
        + Great auto completion
        + Still being updated
        + Can add plugins
    Code::Blocks :
        + Still being updated
        + Can add plugins
* Main libraries (gaming libraries) :
    SDL :
        - Coded in C
        - Not vectorial
    SFML :
        + Coded in C++
        + Has a sound library
        - Not vectorial
        //----> KS : C'est embêtant car c'est celle qu'on imaginait prendre mais après tout, rien n'empeche de reconvertir les assets en matriciel
        //---->      Si on a les dessins en vectoriel, on pourra les agrandir à volonté avant de les intégrer en matriciel
        //----> JS : Ouai mais ce ne sera pas possible de le faire pendant l'exécution du jeu. A moins d'avoir une librairie qui convertisse le vectoriel en matriciel.
        //---->      Tout devra être fait avant, avec peut être plusieurs taille d'une seule image. Mais normalement SFML gère bien le dézoom.
    Allegro 5 :
        - coded in C
        - Not vectorial
    Cairo :
        - Coded in C
        + Vectorial
        - Not matricial
* Coding rules :
    * Tabs and spaces :
        * Use spaces rather than tabs
        * 1 tab = 4 spaces
    * Brackets :
        * Opening brackets ("{") can be set at the end of a line or right under at the same indent of the current line
        * Use brackets ("{" and "}") inside a "case" in the switch statement
        * Brackets ("{" and "}") can be used to surround a bunch of lines (can be useful when we want to fold that bunch)
        * If there are more than 1 closing bracket ("}") in a row, can be set in the same line (but keep the good indent for each of them)
        * You must indent after an opening bracket ("{")
    * Comments :
        * Each function must have a comment right after the opening bracket with the last update date, the last test date, and a global explaining of the function
        * Comments can be added in some part which need explainations to be understood easily
    * Naming :
        * Namespace :
            * Must begin with an upper case letter
            * Must end with "_NS" to show that it is a namespace
            * Can't contain underscore, excepted in the case above
            * Can contain numbers
            * Can't be full upper case
            * If several words are used, use an upper case for the first letter of each word
            Example : "Ship_NS", "ScreenView_NS"
        * Class :
            * Must begin with an upper case letter
            * Can't contain underscore
            * Can't be full upper case
            * Can contain numbers
            * If several words are used, use an upper case for the first letter of each word
            Example : "MyFirstClass", "AnOtherClass", "Vector2d"
        * Function/Method name :
            * Must begin with a lower case letter
            * Can't contain underscore
            * Can't be full upper case
            * Can contain numbers
            * If several words are used, use an upper case for the first letter of each word
            Example : "add2Vectors", "activateTheTimer"
        * Variable/Member name :
            * Must begin with a lower case letter
            * If the variable is private in a class, must begin with an underscore (the first letter still have to be lower case)
            * Can't contain underscore, excepted in the case above
            * Can't be full upper case
            * Can contain numbers
            * If several words are used, use an upper case for the first letter of each word
            Example : "_name", "_timeRemaining", "temporaryBuffer"
        * Structure :
            * Must begin with an upper case
            * Must end with "_s" to show that it is a structure
            * Can't contain underscore, excepted in the case above
            * Can't be full upper case
            * Can contain numbers
            * If several words are used, use an upper case for the first letter of each word
            Example : "Test_t", "BadMonster_t"
        * Enumeration (class or not) :
            * Must begin with a lower case letter
            * Must end with "_e" to show that it is an enumeration
            * Can't contain underscore, excepted in the case above
            * Can't be full upper case
            * Can contain numbers
            * If several words are used, use an upper case for the first letter of each word
            Example : "alive", "dead", "probablyBoth"
        

    Code example :
        // Look at the file example.cpp

* UML software :
    Umbrello : https://umbrello.kde.org/
        + multi-platform
        + save information in .xmi file, in XML format


* Architecture :
    // Tu entends quoi par architecture ?
    //----> KS : Tu vas avoir des classes à créer : déplacements des assets, gestions des collisions etc,
    //---->      il va donc falloir imaginer les entrées/sorties de ces classes sous la forme de schémas je pense.
    //----> JS : Ok, mais j'y connais rien en jeu vidéo, je vois pas du tout comment imaginer les choses.
    //---->      D'ailleurs, tu connais un bon logiciel pour faire des schéma de classe ?
